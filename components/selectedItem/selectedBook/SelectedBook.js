import styles from "./SelectedBook.module.scss";
import AmazonLink from "./amazonLink/AmazonLink";
import { AMAZON, AUDIBLE } from "../../../constants/amazonLinkConstants";

const SelectedBook = ({ book }) => {
  return (
    <>
      <h2 className={styles.title}>{book.title}</h2>
      <h3 className={styles.authors}>{book.authors}</h3>
      <img className={styles.cover} src={book.imageSrc} />

      <p className={styles.details}>{"My Rating: " + book.rating}</p>
      <p className={styles.details}>{"Read On: " + book.dateRead}</p>

      <div className={styles.buttonsContainer}>
        {book.amazonLink && <AmazonLink type={AMAZON} link={book.amazonLink} />}
        {book.audibleLink && (
          <AmazonLink type={AUDIBLE} link={book.audibleLink} />
        )}
      </div>
      <p
        className={styles.description}
        dangerouslySetInnerHTML={{ __html: book.description }}
        /* In this situation, the above line of code is not dangerous.
         * All data in this application is generated by me and is stored in my own database.
         * Thus, I don't have to worry about malicious user data being interpreted as code.
         *
         * If you're adapting this code to situations in which user data is involved, don't use dangerouslySetInnerHTML.
         *
         * You can read more about React's dangerouslySetInnerHTML here:
         * https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml.
         * Stay safe!*/
      />
      <h2 className={styles.notesHeader}>Notes</h2>

      <div
        className={styles.notes}
        dangerouslySetInnerHTML={{ __html: book.notes }} //See the previous comment.
      />
    </>
  );
};

export default SelectedBook;
