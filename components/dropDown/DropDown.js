import React, { useState } from "react";
import { FaAngleDown, FaAngleUp } from "react-icons/fa";
import styles from "./DropDown.module.scss";
import FeatureSpotlight from "./featureSpotlight/FeatureSpotlight";
import {
  MOTIVATION,
  FEATURE_SPOTLIGHTS,
  LESSONS_LEARNED,
  VIDEO_DEMO,
  headers,
} from "../../constants/projectConstants";
import ReactPlayer from "react-player";

const DropDown = ({ item, project }) => {
  const [isSelected, setIsSelected] = useState(false);

  return (
    <div
      className={`${styles.dropDown} ${isSelected && styles.animateDropDown}`}
    >
      <p
        className={styles.header}
        onClick={() => setIsSelected((prev) => !prev)}
      >
        {headers[item]}
        {isSelected ? (
          <FaAngleUp className={styles.dropDownArrow} />
        ) : (
          <FaAngleDown className={styles.dropDownArrow} />
        )}
      </p>

      <div className={styles.itemsContainer}>
        {item === FEATURE_SPOTLIGHTS ? (
          <FeatureSpotlight project={project} />
        ) : item === MOTIVATION ? (
          <div
            className={styles.motivation}
            dangerouslySetInnerHTML={{ __html: project.motivation }}
            /* In this situation, the above line of code is not dangerous.
             * All data in this application is generated by me and is stored in my own database.
             * Thus, I don't have to worry about malicious user data being interpreted as code.
             *
             * If you're adapting this code to situations in which user data is involved, don't use dangerouslySetInnerHTML.
             *
             * You can read more about React's dangerouslySetInnerHTML here:
             * https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml.
             * Stay safe!*/
          />
        ) : item === VIDEO_DEMO ? (
          <div className={styles.playerContainer}>
            <ReactPlayer url={project.demoLink} controls={true} />
          </div>
        ) : (
          item === LESSONS_LEARNED && (
            <div
              className={styles.lessonsLearned}
              dangerouslySetInnerHTML={{ __html: project.lessonsLearned }}
            />
          )
        )}
      </div>
    </div>
  );
};

export default DropDown;
